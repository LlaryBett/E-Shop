version: '3.8'

services:
  # MongoDB service
  mongodb:
    image: mongo:7.0
    container_name: eshop-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: eshop
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - eshop-network

  # Redis service (for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: eshop-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eshop-network

  # Backend API service
  api:
    build: .
    container_name: eshop-api
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/eshop?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRE: 7d
      CLIENT_URL: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - eshop-network

  # MongoDB Express (Database GUI - Development only)
  mongo-express:
    image: mongo-express:latest
    container_name: eshop-mongo-express
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    networks:
      - eshop-network
    profiles:
      - dev

volumes:
  mongodb_data:
  redis_data:

networks:
  eshop-network:
    driver: bridge
